name: ci

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.variant }} ${{ matrix.config.target }}
    if: |
      github.event_name == 'push' ||
      !startsWith(github.event.pull_request.head.label, 'lbguilherme:')
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 120
    strategy:
      matrix:
        config:
          - os: ubuntu-18.04
            target: x86_64-unknown-linux-gnu
            variant: debug

          - os: ubuntu-18.04
            target: x86_64-unknown-linux-gnu
            variant: release

    env:
      V8_FROM_SOURCE: true
      CARGO_VARIANT_FLAG: ${{ matrix.config.variant == 'release' && '--release' || '' }}
      LIB_NAME: ${{ contains(matrix.config.target, 'windows') && 'rusty_v8' || 'librusty_v8' }}
      LIB_EXT: ${{ contains(matrix.config.target, 'windows') && 'lib' || 'a' }}
      RUSTFLAGS: -D warnings

    steps:
      - name: Configure git
        run: git config --global core.symlinks true

      - name: Clone repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 10
          submodules: recursive

      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: clippy, rustfmt
          rust-version: 1.55.0

      - name: Install python
        uses: actions/setup-python@v1
        with:
          python-version: 2.7.x
          architecture: x64

      - name: Write git_submodule_status.txt
        run: git submodule status --recursive > git_submodule_status.txt

      - name: Cache
        uses: actions/cache@v2
        with:
          # Note: rusty_v8 targets always get get rebuilt, and their outputs
          # ('librusty_v8.rlib', the whole 'gn_out' directory, etc.) can be
          # quite big, so we cache only those subdirectories of
          # target/{debug|release} that contain the build output for crates that
          # come from the registry. By additionally saving the sccache cache
          # directory it's still possible to build v8 fast.
          path: |-
            target/sccache
            target/*/.*
            target/*/build
            target/*/deps
          key:
            cargo-${{ matrix.config.target }}-${{ matrix.config.variant }}-${{ hashFiles('Cargo.lock', 'build.rs', 'git_submodule_status.txt') }}
          restore-keys:
            cargo-${{ matrix.config.target }}-${{ matrix.config.variant }}-

      - name: Install and start sccache
        shell: pwsh
        env:
          SCCACHE_DIR: ${{ github.workspace }}/target/sccache
          SCCACHE_CACHE_SIZE: 128M
          SCCACHE_IDLE_TIMEOUT: 0
        run: |
          $version = "0.2.12"
          $platform =
            @{ "macOS"   = "x86_64-apple-darwin"
               "Linux"   = "x86_64-unknown-linux-musl"
               "Windows" = "x86_64-pc-windows-msvc"
             }.${{ runner.os }}
          $basename = "sccache-$version-$platform"
          $url = "https://github.com/mozilla/sccache/releases/download/" +
                 "$version/$basename.tar.gz"
          cd ~
          curl -LO $url
          tar -xzvf "$basename.tar.gz"
          . $basename/sccache --start-server
          echo "$(pwd)/$basename" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append


      - name: Test
        run:
          cargo test -vv --all-targets --locked ${{ env.CARGO_VARIANT_FLAG }}
          --target ${{ matrix.config.target }}

      - name: Clippy
        run:
          cargo clippy --all-targets --locked ${{ env.CARGO_VARIANT_FLAG }}
          --target ${{ matrix.config.target }} -- -D clippy::all

      - name: Rustfmt
        run: cargo fmt -- --check

      - name: Prepare binary publish
        run: cp
          target/${{ matrix.config.target }}/${{ matrix.config.variant }}/gn_out/obj/${{ env.LIB_NAME }}.${{ env.LIB_EXT }}
          target/${{ env.LIB_NAME }}_${{ matrix.config.variant }}_${{ matrix.config.target }}.${{ env.LIB_EXT }}

      - name: Binary publish
        # TODO(ry): use version instead of commit hash once #139 is fixed.
        # https://github.com/softprops/action-gh-release/issues/139
        uses: softprops/action-gh-release@59c3b4891632ff9a897f99a91d7bc557467a3a22
        if: >-
          github.repository == 'lbguilherme/rusty_v8' &&
          startsWith(github.ref, 'refs/tags/')
        with:
          files: target/${{ env.LIB_NAME }}_${{ matrix.config.variant }}_${{ matrix.config.target }}.${{ env.LIB_EXT }}

      - name: Stop sccache
        if: always()
        run: |
          sccache --show-stats
          sccache --stop-server
